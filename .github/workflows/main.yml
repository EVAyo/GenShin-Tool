name: Auto Package Helper
on:
  workflow_dispatch:

jobs:
  build-py39:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Cache Python packages
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Windows')
        id: cache-pip
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install Python lib
        run: |
          pip install -r requirements.txt
          
      - name: Get version
        run: echo "version=$(cat version.txt)" >> $env:GITHUB_ENV
        
      - name: Package to exe
        run: pyinstaller -w .\mainCapture.spec

      - name: Upload output
        uses: actions/upload-artifact@v2
        with:
          name: genshin-gacha-export_capture_${{ env.version }}
          path: dist

      - name: Remove output
        run: rm dist\genshin-gacha-export.exe

      - name: Package to exe
        run: pyinstaller -w .\main.spec
        
      - name: Upload output
        uses: actions/upload-artifact@v2
        with:
          name: genshin-gacha-export_${{ env.version }}
          path: dist\genshin-gacha-export.exe

      
  build-py37:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Cache Python packages
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Windows')
        id: cache-pip
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install Python lib
        run: |
          pip install -r requirements.txt
          
      - name: Get version
        run: echo "version=$(cat version.txt)" >> $env:GITHUB_ENV
          
      - name: Package to exe
        run: pyinstaller -w .\mainCapture.spec

      - name: Upload output
        uses: actions/upload-artifact@v2
        with:
          name: genshin-gacha-export-win7_capture_${{ env.version }}
          path: dist

      - name: Remove output
        run: rm dist\genshin-gacha-export.exe

      - name: Package to exe
        run: pyinstaller -w .\main.spec
        
      - name: Upload output
        uses: actions/upload-artifact@v2
        with:
          name: genshin-gacha-export-win7_${{ env.version }}
          path: dist\genshin-gacha-export.exe
